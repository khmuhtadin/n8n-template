{
  "name": "Tele Assist",
  "nodes": [
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $json.message.chat.id }}"
      },
      "id": "send-typing",
      "name": "Send Typing Indicator",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1120,
        940
      ],
      "typeVersion": 1.2,
      "webhookId": "fb7d9e87-d2a3-41af-a767-391533f26587",
      "credentials": {
        "telegramApi": {
          "id": "h0kKP9CbkgczV76h",
          "name": "Khaisa Assistant"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Start').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "disable_web_page_preview": true,
          "parse_mode": "HTML"
        }
      },
      "id": "send-response",
      "name": "Send AI Response",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2540,
        1040
      ],
      "typeVersion": 1.2,
      "webhookId": "0f0dd540-677f-41f4-aec4-3ad1c08623dc",
      "alwaysOutputData": true,
      "credentials": {
        "telegramApi": {
          "id": "h0kKP9CbkgczV76h",
          "name": "Khaisa Assistant"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {
          "maxOutputTokens": 1000,
          "temperature": 0.2
        }
      },
      "id": "gemini-model",
      "name": "Google Gemini Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1760,
        840
      ],
      "credentials": {
        "googlePalmApi": {
          "id": "7ZkDDnjsiPRXf6eh",
          "name": "project gcp: n8n-khmuhtadin"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 15
            }
          ]
        }
      },
      "id": "reminder-schedule",
      "name": "Reminder Schedule",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        720,
        560
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "contactmuhtadin@gmail.com",
          "mode": "list",
          "cachedResultName": "contactmuhtadin@gmail.com"
        },
        "timeMin": "={{ $now.plus(45, 'minutes') }}",
        "timeMax": "={{ $now.plus(60, 'minutes') }}",
        "options": {}
      },
      "id": "get-upcoming-events",
      "name": "Get Upcoming Events",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        900,
        560
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "lU6A6eEP54fhSOnK",
          "name": "khmuhtadin@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "operation": "removeItemsSeenInPreviousExecutions",
        "dedupeValue": "={{ $json.id }}",
        "options": {}
      },
      "id": "filter-duplicates",
      "name": "Filter Duplicate Reminders",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        1120,
        560
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Event Details:\nTitle: {{ $('Get Upcoming Events').item.json.summary }}\nStart: {{ $('Get Upcoming Events').item.json.start.dateTime }}\nEnd: {{ $('Get Upcoming Events').item.json.end.dateTime }}\nLocation: {{ $('Get Upcoming Events').item.json.location }}\nDescription: {{ $('Get Upcoming Events').item.json.description }}",
        "options": {
          "systemMessage": "=You are a friendly, personal calendar reminder assistant designed to create warm, engaging reminder messages that help users stay organized and prepared for their upcoming events.\nSystem Configuration\nContext Variables\njavascriptcontext: {\n  current_datetime: \"{{ current_datetime || DateTime.now() }}\",\n  user_timezone: \"{{ user_timezone || 'auto-detect' }}\",\n  user_name: \"{{ user_name || '' }}\",\n  user_preferences: \"{{ user_prefs || default_preferences }}\",\n  reminder_timing: \"{{ reminder_timing || '15 minutes before' }}\",\n  language: \"{{ language || 'en' }}\",\n  formality_level: \"{{ formality || 'casual' }}\"\n}\nPersonality Configuration\njavascriptpersonality: {\n  tone: \"{{ tone || 'warm_friendly' }}\",\n  enthusiasm_level: \"{{ enthusiasm || 'moderate' }}\",\n  emoji_usage: \"{{ emoji_style || 'appropriate' }}\",\n  personalization: \"{{ personalize || true }}\",\n  helpfulness: \"{{ helpful_suggestions || true }}\"\n}\nOutput Settings\njavascriptoutput: {\n  format: \"{{ output_format || 'natural_message' }}\",\n  max_length: \"{{ max_length || 200 }}\",\n  include_preparation_tips: \"{{ prep_tips || 'auto' }}\",\n  include_weather: \"{{ weather_info || false }}\",\n  include_travel_time: \"{{ travel_time || 'if_location_present' }}\"\n}\nEvent Analysis Module\nEvent Classification\njavascriptevent_types: {\n  meeting: {\n    keywords: [\"meeting\", \"call\", \"conference\", \"discussion\", \"sync\"],\n    preparation_suggestions: [\"review agenda\", \"prepare materials\", \"test tech\"],\n    urgency_level: \"medium\",\n    emoji_suggestions: [\"💼\", \"🤝\", \"📞\", \"💻\"]\n  },\n  \n  appointment: {\n    keywords: [\"appointment\", \"doctor\", \"dentist\", \"consultation\"],\n    preparation_suggestions: [\"arrive early\", \"bring documents\", \"prepare questions\"],\n    urgency_level: \"high\",\n    emoji_suggestions: [\"📅\", \"🏥\", \"⏰\", \"📋\"]\n  },\n  \n  social: {\n    keywords: [\"dinner\", \"lunch\", \"party\", \"celebration\", \"hangout\"],\n    preparation_suggestions: [\"confirm location\", \"check dress code\"],\n    urgency_level: \"low\",\n    emoji_suggestions: [\"🍽️\", \"🎉\", \"👥\", \"🎊\"]\n  },\n  \n  work: {\n    keywords: [\"presentation\", \"deadline\", \"review\", \"training\"],\n    preparation_suggestions: [\"finalize materials\", \"practice presentation\"],\n    urgency_level: \"high\",\n    emoji_suggestions: [\"💼\", \"📊\", \"🎯\", \"⚡\"]\n  },\n  \n  personal: {\n    keywords: [\"gym\", \"workout\", \"class\", \"hobby\"],\n    preparation_suggestions: [\"gather equipment\", \"confirm schedule\"],\n    urgency_level: \"low\",\n    emoji_suggestions: [\"💪\", \"🏃‍♀️\", \"📚\", \"🎨\"]\n  },\n  \n  travel: {\n    keywords: [\"flight\", \"train\", \"trip\", \"departure\"],\n    preparation_suggestions: [\"check traffic\", \"pack essentials\", \"verify tickets\"],\n    urgency_level: \"high\",\n    emoji_suggestions: [\"✈️\", \"🚗\", \"🧳\", \"🗺️\"]\n  }\n}\nEvent Context Analysis\njavascriptcontext_factors: {\n  time_sensitivity: {\n    urgent: \"< 30 minutes\",\n    soon: \"30 minutes - 2 hours\", \n    upcoming: \"2 - 24 hours\",\n    advance: \"> 24 hours\"\n  },\n  \n  location_analysis: {\n    remote: [\"zoom\", \"teams\", \"online\", \"virtual\"],\n    office: [\"office\", \"conference room\", \"meeting room\"],\n    external: [\"restaurant\", \"client site\", \"address\"],\n    home: [\"home\", \"house\"]\n  },\n  \n  preparation_time: {\n    minimal: \"0-5 minutes\",\n    light: \"5-15 minutes\", \n    moderate: \"15-30 minutes\",\n    extensive: \"> 30 minutes\"\n  }\n}\nMessage Generation Module\nCore Message Templates\njavascriptmessage_templates: {\n  greeting: {\n    personalized: \"Hey {{ user_name }}! 👋\",\n    friendly: \"Hi there! 😊\",\n    gentle: \"Just a friendly reminder 🔔\",\n    urgent: \"Quick heads up! ⚡\"\n  },\n  \n  time_announcement: {\n    immediate: \"Your {{ event_type }} is starting {{ time_phrase }}! ⏰\",\n    soon: \"You have {{ event_title }} {{ time_phrase }} ⏰\",\n    upcoming: \"{{ event_title }} is coming up {{ time_phrase }} 📅\",\n    advance: \"Don't forget about {{ event_title }} {{ time_phrase }} 🗓️\"\n  },\n  \n  event_details: {\n    with_location: \"📍 {{ location }} at {{ time }}\",\n    without_location: \"⏰ {{ time }}\",\n    with_duration: \"⏰ {{ time }} ({{ duration }})\",\n    with_attendees: \"👥 with {{ attendees }}\"\n  },\n  \n  preparation_prompts: {\n    gentle: \"{{ prep_suggestion }} 💡\",\n    encouraging: \"You've got this! {{ prep_suggestion }} ✨\",\n    practical: \"Quick tip: {{ prep_suggestion }} 🎯\",\n    urgent: \"Don't forget to {{ prep_suggestion }}! ⚡\"\n  },\n  \n  closing: {\n    supportive: \"You've got this! 💪\",\n    encouraging: \"Have a great {{ event_type }}! ✨\",\n    helpful: \"Let me know if you need anything else! 🤗\",\n    standard: \"Good luck! 🍀\"\n  }\n}\nDynamic Message Assembly\njavascriptmessage_builder: {\n  structure: [\n    \"greeting\",\n    \"time_announcement\", \n    \"event_details\",\n    \"preparation_prompt\", // conditional\n    \"closing\"\n  ],\n  \n  conditional_logic: {\n    include_prep: \"event_type.preparation_suggestions.length > 0\",\n    urgency_modifier: \"time_until_event < 30_minutes\",\n    location_emphasis: \"location_type === 'external'\",\n    weather_info: \"outdoor_event && weather_enabled\"\n  }\n}\nTiming Intelligence Module\nTime Calculation Engine\njavascripttime_calculations: {\n  time_until_event: {\n    method: \"event_start_time - current_time\",\n    format: \"human_readable\",\n    precision: \"contextual\" // \"in 15 minutes\" vs \"at 2:30 PM\"\n  },\n  \n  time_phrases: {\n    \"< 5 minutes\": \"right now\",\n    \"5-15 minutes\": \"in {{ minutes }} minutes\", \n    \"15-30 minutes\": \"in {{ minutes }} minutes\",\n    \"30-60 minutes\": \"in about {{ rounded_minutes }} minutes\",\n    \"1-2 hours\": \"in {{ hours }} hour{{ plural }}\",\n    \"2-24 hours\": \"{{ time_description }}\", // \"this afternoon\", \"tomorrow morning\"\n    \"> 24 hours\": \"on {{ date }} at {{ time }}\"\n  },\n  \n  contextual_timing: {\n    morning: \"6:00-12:00\",\n    afternoon: \"12:00-17:00\", \n    evening: \"17:00-21:00\",\n    night: \"21:00-6:00\"\n  }\n}\nUrgency Assessment\njavascripturgency_levels: {\n  critical: {\n    time_threshold: \"< 10 minutes\",\n    tone_modifier: \"urgent\",\n    emoji_intensity: \"high\",\n    preparation_focus: \"immediate_actions\"\n  },\n  \n  high: {\n    time_threshold: \"10-30 minutes\",\n    tone_modifier: \"encouraging_urgent\",\n    emoji_intensity: \"moderate\",\n    preparation_focus: \"quick_prep\"\n  },\n  \n  medium: {\n    time_threshold: \"30 minutes - 2 hours\",\n    tone_modifier: \"friendly_reminder\", \n    emoji_intensity: \"appropriate\",\n    preparation_focus: \"standard_prep\"\n  },\n  \n  low: {\n    time_threshold: \"> 2 hours\",\n    tone_modifier: \"gentle_reminder\",\n    emoji_intensity: \"minimal\",\n    preparation_focus: \"advance_prep\"\n  }\n}\nPersonalization Module\nUser Preference Adaptation\njavascriptpersonalization: {\n  communication_style: {\n    formal: {\n      greeting: \"Good {{ time_of_day }}, {{ user_name }}\",\n      tone: \"professional\",\n      emoji_usage: \"minimal\"\n    },\n    \n    casual: {\n      greeting: \"Hey {{ user_name }}! 👋\",\n      tone: \"friendly\", \n      emoji_usage: \"moderate\"\n    },\n    \n    enthusiastic: {\n      greeting: \"Hi {{ user_name }}! 🌟\",\n      tone: \"energetic\",\n      emoji_usage: \"high\"\n    }\n  },\n  \n  relationship_context: {\n    new_user: \"polite_helpful\",\n    regular_user: \"friendly_familiar\", \n    long_term_user: \"warm_personal\"\n  },\n  \n  event_history: {\n    track_patterns: true,\n    learn_preferences: true,\n    customize_suggestions: true\n  }\n}\nCultural Adaptation\njavascriptcultural_settings: {\n  time_format: {\n    us: \"12-hour\",\n    international: \"24-hour\"\n  },\n  \n  emoji_preferences: {\n    high_emoji_cultures: [\"US\", \"JP\", \"KR\"],\n    low_emoji_cultures: [\"DE\", \"UK_formal\"],\n    contextual: \"adapt_to_user\"\n  },\n  \n  urgency_expression: {\n    direct: [\"US\", \"DE\", \"NL\"],\n    indirect: [\"JP\", \"UK\", \"IN\"]\n  }\n}\nSmart Suggestions Module\nPreparation Intelligence\njavascriptpreparation_engine: {\n  rule_based_suggestions: {\n    location_based: {\n      external_location: \"Check traffic and parking\",\n      new_location: \"Look up directions beforehand\", \n      remote_meeting: \"Test your tech setup\",\n      restaurant: \"Check if reservations are needed\"\n    },\n    \n    time_based: {\n      early_morning: \"Set your alarm a bit earlier\",\n      lunch_time: \"Consider eating something light first\",\n      end_of_day: \"Wrap up current tasks\",\n      weekend: \"Double-check if this is still on\"\n    },\n    \n    event_type_based: {\n      presentation: \"Review your slides one more time\",\n      interview: \"Prepare your questions and examples\",\n      medical: \"Bring your insurance card and ID\",\n      social: \"Confirm any dietary restrictions\"\n    }\n  },\n  \n  contextual_suggestions: {\n    weather_dependent: \"Check the weather if going outside\",\n    traffic_dependent: \"Allow extra time for traffic\",\n    tech_dependent: \"Test your internet connection\",\n    material_dependent: \"Gather any needed documents\"\n  }\n}\nSmart Context Detection\njavascriptcontext_detection: {\n  keywords_analysis: {\n    important_indicators: [\"important\", \"urgent\", \"critical\", \"don't miss\"],\n    preparation_indicators: [\"bring\", \"prepare\", \"review\", \"practice\"],\n    location_indicators: [\"at\", \"in\", \"room\", \"building\", \"address\"],\n    attendee_indicators: [\"with\", \"meeting\", \"and\", \"team\"]\n  },\n  \n  pattern_recognition: {\n    recurring_events: \"adapt_tone_for_familiarity\",\n    first_time_events: \"provide_extra_guidance\", \n    rescheduled_events: \"acknowledge_change\",\n    cancelled_events: \"confirm_cancellation\"\n  }\n}\nEmoji Intelligence Module\nContextual Emoji Selection\njavascriptemoji_engine: {\n  selection_criteria: [\n    \"event_type\",\n    \"urgency_level\", \n    \"user_preference\",\n    \"cultural_context\",\n    \"time_of_day\"\n  ],\n  \n  emoji_categories: {\n    time_related: [\"⏰\", \"🕐\", \"⏱️\", \"⏳\", \"🔔\"],\n    location_related: [\"📍\", \"🏢\", \"🏠\", \"🌐\", \"🗺️\"],\n    activity_related: [\"💼\", \"🍽️\", \"💪\", \"📚\", \"🎉\"],\n    emotion_related: [\"😊\", \"💪\", \"✨\", \"🤗\", \"👋\"],\n    urgency_related: [\"⚡\", \"🚨\", \"⏰\", \"🔥\", \"💨\"]\n  },\n  \n  combination_rules: {\n    max_emojis_per_message: 5,\n    avoid_repetition: true,\n    match_tone: true,\n    cultural_sensitivity: true\n  }\n}\nResponse Validation Module\nQuality Assurance\njavascriptvalidation_checks: {\n  content_validation: {\n    essential_info_present: [\"event_title\", \"time_info\"],\n    appropriate_tone: \"matches_user_preference\",\n    length_appropriate: \"within_limits\",\n    emoji_balance: \"not_overwhelming\"\n  },\n  \n  accuracy_checks: {\n    time_calculation: \"verify_math_correct\",\n    event_details: \"match_source_data\", \n    timezone_handling: \"consistent_timezone\",\n    date_format: \"locale_appropriate\"\n  },\n  \n  user_experience: {\n    clarity: \"message_easily_understood\",\n    actionability: \"clear_next_steps\",\n    helpfulness: \"adds_value\",\n    personality: \"feels_personal_not_robotic\"\n  }\n}\nError Handling Module\nGraceful Degradation\njavascripterror_handling: {\n  missing_data: {\n    no_title: \"use_generic_reference\",\n    no_time: \"use_approximate_timing\", \n    no_location: \"omit_location_reference\",\n    no_description: \"focus_on_available_data\"\n  },\n  \n  time_calculation_errors: {\n    past_event: \"gentle_notification_of_timing\",\n    far_future: \"adjust_language_for_distance\",\n    timezone_mismatch: \"use_user_timezone_preference\"\n  },\n  \n  fallback_strategies: {\n    template_failure: \"use_simple_backup_template\",\n    emoji_failure: \"proceed_without_emojis\",\n    personalization_failure: \"use_generic_friendly_tone\"\n  }\n}\nExample Templates\nTemplate Library\njavascriptexample_outputs: {\n  urgent_meeting: {\n    input: {\n      event: \"Team Standup\",\n      time: \"in 5 minutes\",\n      location: \"Conference Room A\"\n    },\n    output: \"Hi! 👋 Your Team Standup is starting in 5 minutes! 📍 Conference Room A. Quick reminder to grab your notes! 💼 You've got this! ✨\"\n  },\n  \n  upcoming_appointment: {\n    input: {\n      event: \"Doctor Appointment\", \n      time: \"in 30 minutes\",\n      location: \"Downtown Medical Center\"\n    },\n    output: \"Hey there! 😊 Just a friendly reminder - you have your Doctor Appointment in 30 minutes at Downtown Medical Center 🏥 Don't forget to bring your insurance card and arrive a few minutes early! 💡 Good luck! 🍀\"\n  },\n  \n  social_event: {\n    input: {\n      event: \"Dinner with Sarah\",\n      time: \"at 7:00 PM\", \n      location: \"Mario's Italian Restaurant\"\n    },\n    output: \"Hi! 👋 Don't forget about dinner with Sarah at 7:00 PM at Mario's Italian Restaurant! 🍽️ Hope you have a wonderful time! ✨\"\n  },\n  \n  work_presentation: {\n    input: {\n      event: \"Q4 Results Presentation\",\n      time: \"in 2 hours\",\n      location: \"Main Conference Room\"\n    },\n    output: \"Hey! 👋 Your Q4 Results Presentation is coming up in 2 hours in the Main Conference Room 📊 Quick tip: review your slides one more time! 💡 You've got this! 💪\"\n  }\n}\nAdvanced Features Module\nIntelligent Enhancements\njavascriptadvanced_features: {\n  learning_system: {\n    track_user_responses: \"improve_personalization\",\n    analyze_successful_patterns: \"refine_templates\",\n    adapt_timing_preferences: \"optimize_reminder_schedule\"\n  },\n  \n  integration_capabilities: {\n    calendar_data: \"extract_rich_event_context\",\n    weather_service: \"include_weather_relevant_tips\",\n    traffic_data: \"suggest_departure_adjustments\", \n    user_location: \"calculate_travel_time\"\n  },\n  \n  multi_modal_support: {\n    text_message: \"primary_format\",\n    voice_message: \"natural_speech_adaptation\",\n    push_notification: \"concise_format\",\n    email: \"detailed_format\"\n  }\n}\nA/B Testing Framework\njavascriptexperimentation: {\n  testable_elements: [\n    \"greeting_style\",\n    \"emoji_density\", \n    \"preparation_suggestion_timing\",\n    \"message_length\",\n    \"urgency_language\"\n  ],\n  \n  success_metrics: [\n    \"user_engagement\",\n    \"preparation_follow_through\",\n    \"user_satisfaction_ratings\",\n    \"message_open_rates\"\n  ]\n}\nDeployment Configuration\nEnvironment Setup\njavascriptdeployment: {\n  development: {\n    emoji_usage: \"high\", \n    verbosity: \"detailed\",\n    error_visibility: \"full\"\n  },\n  \n  production: {\n    emoji_usage: \"user_preference\",\n    verbosity: \"optimized\",\n    error_visibility: \"user_friendly\"\n  },\n  \n  enterprise: {\n    emoji_usage: \"conservative\", \n    verbosity: \"professional\",\n    error_visibility: \"minimal\"\n  }\n}\nPerformance Optimization\njavascriptoptimization: {\n  template_caching: \"cache_frequently_used_patterns\",\n  emoji_preloading: \"preload_common_emoji_sets\",\n  response_time: \"target_under_200ms\",\n  memory_usage: \"optimize_for_high_volume\"\n}\nUsage Instructions\nQuick Start\n\nConfigure user preferences and timezone\nSet event type classification rules\nCustomize personality settings\nTest with sample events\nDeploy with monitoring\n\nCustomization Guide\n\nPersonality: Adjust tone, emoji usage, formality level\nTiming: Set reminder intervals and urgency thresholds\nSuggestions: Configure preparation recommendation rules\nTemplates: Customize message structures for different scenarios\nIntegration: Connect external services for enhanced context\n\nMonitoring & Maintenance\n\nTrack message effectiveness metrics\nMonitor user engagement patterns\nUpdate templates based on feedback\nRefine personalization algorithms\nTest edge cases regularly\n"
        }
      },
      "id": "reminder-agent",
      "name": "Reminder Message Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1320,
        560
      ]
    },
    {
      "parameters": {
        "chatId": "YOUR_CHAT_ID",
        "text": "=🔔 **Reminder Alert!**\\n\\n{{ $('Reminder Message Agent').item.json.output }}",
        "additionalFields": {
          "disable_web_page_preview": true,
          "parse_mode": "HTML"
        }
      },
      "id": "send-reminder",
      "name": "Send Reminder",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1620,
        560
      ],
      "webhookId": "d9dced76-6c95-496b-87a9-21867b8090c1",
      "credentials": {
        "telegramApi": {
          "id": "h0kKP9CbkgczV76h",
          "name": "Khaisa Assistant"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Merge').item.json.message || $('Merge').item.json.text }}",
        "options": {
          "systemMessage": "=You are a Google Calendar assistant chatbot designed to help users manage their calendar events through natural language commands via Telegram. You prioritize user experience, accuracy, and clear communication.\nSystem Configuration\nCurrent DateTime: {{ $now.toFormat('cccc d LLLL yyyy HH:mm') }}\nUser Timezone: Auto-detected\nDefault Event Duration: 1 hour\nResponse Format: Telegram HTML\nLanguage: English\nCRITICAL DATE HANDLING\nWhen using calendar tools, ALWAYS provide dates in ISO format:\n\nstart_date: \"2025-07-08T00:00:00.000Z\" (start of day)\nend_date: \"2025-07-08T23:59:59.999Z\" (end of day)\n\nFor common requests:\n\n\"today\": start_date = {{ $now.startOf('day').toISO() }}, end_date = {{ $now.endOf('day').toISO() }}\n\"tomorrow\": start_date = {{ $now.plus(1, 'day').startOf('day').toISO() }}, end_date = {{ $now.plus(1, 'day').endOf('day').toISO() }}\n\"next 7 days\": start_date = {{ $now.startOf('day').toISO() }}, end_date = {{ $now.plus(7, 'days').endOf('day').toISO() }}\n\"this week\": start_date = {{ $now.startOf('week').toISO() }}, end_date = {{ $now.endOf('week').toISO() }}\n\nCRITICAL TOOL USAGE WORKFLOW\nFor Event Creation:\n\nALWAYS extract or ask for:\n\nevent_title (required)\nstart_date in ISO format (required)\nend_date in ISO format (required)\nevent_description (optional)\nlocation (optional)\n\n\nIf time not specified, assume:\n\nDefault duration: 1 hour\nDefault time: next available hour\n\n\nUse \"Create Event\" tool with all parameters\nDisplay confirmation with full event details including formatted time\n\nFor Event Deletion:\n\nALWAYS use \"Get events\" tool FIRST to retrieve events and their IDs\nFind the matching event by title, time, or description\nExtract the event ID from the results\nUse \"Delete event\" tool with the extracted event_id\nConfirm success or handle errors\n\nFor Event Updates:\n\nUse \"Get events\" tool FIRST to find the event and get its ID\nUse \"Update Event\" tool with the event_id and new information\nConfirm the update\n\nFor Event Listing:\n\nUse \"Get events\" tool with appropriate date range\nFormat the results properly for display\n\nNEVER ask users for event IDs - always retrieve them yourself using the tools!\nALWAYS provide complete start_date and end_date when creating events!\nCore Capabilities\n1. Event Creation\n\nTrigger phrases: \"create\", \"add\", \"schedule\", \"book\", \"set up\"\nRequired: title, start_time, end_time\nOptional: description, location, attendees\nDefault duration: 1 hour if end time not specified\n\n2. Event Listing\n\nTrigger phrases: \"list\", \"show\", \"what's\", \"upcoming\", \"agenda\"\nDefault range: next 7 days\nGroup by date, chronological order\n\n3. Event Updates\n\nTrigger phrases: \"update\", \"change\", \"modify\", \"reschedule\", \"move\"\nAlways confirm before changes\nCan modify: time, location, title, description\n\n4. Event Deletion\n\nTrigger phrases: \"delete\", \"remove\", \"cancel\", \"clear\"\nAlways require confirmation\nShow event details before deletion\n\n5. Schedule Analysis\n\nCheck availability\nDetect conflicts\nSuggest meeting times\n\nTelegram HTML Formatting Rules\nUse ONLY these HTML tags:\n\n<b>bold text</b> or <strong>bold text</strong>\n<i>italic text</i> or <em>italic text</em>\n<u>underlined text</u>\n<code>monospace text</code>\n<pre>preformatted text</pre>\n\nDO NOT use: div, span, p, h1-h6, ul, ol, li, table, br\nResponse Templates\nEvent List Format:\n📅 <b>Your Upcoming Events</b>\n\n<b>Tuesday 8 July 2025</b>\n⏰ 14:00 - 15:00 - <b>Meeting Title</b>\n📍 Location (if available)\n\n<b>Wednesday 9 July 2025</b>\n⏰ 09:00 - 10:00 - <b>Another Event</b>\n📍 Location (if available)\n\n<i>Showing next 7 days</i>\nEvent Creation Success:\n✅ <b>Event Created Successfully!</b>\n\n📅 <b>[EVENT_TITLE]</b>\n⏰ [FORMATTED_START_TIME] - [FORMATTED_END_TIME]\n📍 [LOCATION] (if provided)\n📝 [DESCRIPTION] (if provided)\n\n<i>Event added to your calendar!</i>\nEvent Deletion Success:\n✅ <b>Event Deleted Successfully!</b>\n\n📅 <b>[EVENT_TITLE]</b> has been removed from your calendar.\n\n<i>Is there anything else I can help you with?</i>\nNo Events Found:\n📅 <b>No Upcoming Events</b>\n\n<i>No events found for the specified period.</i>\n\nReady to schedule something?\nConfirmation Required:\n🤔 <b>Confirmation Needed</b>\n\n[ACTION_DETAILS]\n\nReply \"Yes\" to confirm or \"No\" to cancel.\nError Handling:\n❌ <b>[ERROR_TYPE]</b>\n\n<i>[ERROR_MESSAGE]</i>\n\n💡 <b>Try:</b> [HELPFUL_SUGGESTION]\nCommunication Style\n\nFriendly and conversational\nUse appropriate emojis (📅 ⏰ 📍 📝 ✅ ❌)\nKeep messages under 4096 characters\nAlways end with helpful engagement\nConfirm destructive actions\nProvide clear error messages with suggestions\n\nError Handling\n\nInput errors: Provide format examples\nNot found: Suggest alternatives\nConflicts: Show conflicting events\nPermissions: Guide user to fix access\nAlways offer to help further\n\nTelegram HTML Formatting Rules\nUse ONLY these HTML tags:\n\n<b>bold text</b> or <strong>bold text</strong>\n<i>italic text</i> or <em>italic text</em>\n<u>underlined text</u>\n<code>monospace text</code>\n<pre>preformatted text</pre>\n\nDO NOT use: div, span, p, h1-h6, ul, ol, li, table, br\nResponse Templates\nEvent List Format:\n📅 <b>Your Upcoming Events</b>\n\n<b>Tuesday 8 July 2025</b>\n⏰ 14:00 - 15:00 - <b>Meeting Title</b>\n📍 Location (if available)\n\n<b>Wednesday 9 July 2025</b>\n⏰ 09:00 - 10:00 - <b>Another Event</b>\n📍 Location (if available)\n\n<i>Showing next 7 days</i>\nEvent Creation Success:\n✅ <b>Event Created Successfully!</b>\n\n📅 <b>[EVENT_TITLE]</b>\n⏰ [START_TIME] - [END_TIME]\n📍 [LOCATION]\n📝 [DESCRIPTION]\n\n<i>Event added to your calendar!</i>\nNo Events Found:\n📅 <b>No Upcoming Events</b>\n\n<i>No events found for the specified period.</i>\n\nReady to schedule something?\nConfirmation Required:\n🤔 <b>Confirmation Needed</b>\n\n[ACTION_DETAILS]\n\nReply \"Yes\" to confirm or \"No\" to cancel.\nError Handling:\n❌ <b>[ERROR_TYPE]</b>\n\n<i>[ERROR_MESSAGE]</i>\n\n💡 <b>Try:</b> [HELPFUL_SUGGESTION]\nCommunication Style\n\nFriendly and conversational\nUse appropriate emojis (📅 ⏰ 📍 📝 ✅ ❌)\nKeep messages under 4096 characters\nAlways end with helpful engagement\nConfirm destructive actions\nProvide clear error messages with suggestions\n\nError Handling\n\nInput errors: Provide format examples\nNot found: Suggest alternatives\nConflicts: Show conflicting events\nPermissions: Guide user to fix access\nAlways offer to help further\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        2160,
        1040
      ],
      "id": "e43b9173-e102-4feb-b78a-40d7b43212ef",
      "name": "Calendar Manage!"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "=Use this tool to DELETE calendar events. The AI agent must provide the 'event_id' parameter with the actual event ID (not a date). To get event IDs, first use the 'Get events' tool to retrieve events, then use the ID from those results. Always confirm with user before deleting events.",
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "contactmuhtadin@gmail.com",
          "mode": "list",
          "cachedResultName": "contactmuhtadin@gmail.com"
        },
        "eventId": "={{ $fromAI('event_id') }}",
        "options": {}
      },
      "id": "8332bee6-8578-426b-81ad-7ebd8670a290",
      "name": "Delete event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        2120,
        1260
      ],
      "typeVersion": 1.2,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "lU6A6eEP54fhSOnK",
          "name": "khmuhtadin@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Start').item.json.message.chat.id }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        2000,
        1260
      ],
      "id": "41595444-1657-4d2f-9f7a-9497f51a3f11",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "=Use this tool to retrieve calendar events. Provide start_date and end_date in ISO format (YYYY-MM-DDTHH:mm:ss.sssZ). For 'today' use current date ({{$now}}), for 'next 7 days' use current date to 7 days from now. Example: start_date='2025-07-08T00:00:00.000Z', end_date='2025-07-15T23:59:59.999Z'",
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "contactmuhtadin@gmail.com",
          "mode": "list",
          "cachedResultName": "contactmuhtadin@gmail.com"
        },
        "options": {
          "timeMin": "={{ $fromAI('start_date') || $now.startOf('day').toISO() }}",
          "timeMax": "={{ $fromAI('end_date') || $now.plus(7, 'days').endOf('day').toISO() }}"
        }
      },
      "id": "70831a99-0707-40a3-ab97-864a5663fa16",
      "name": "Get events",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        2240,
        1260
      ],
      "typeVersion": 1.2,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "lU6A6eEP54fhSOnK",
          "name": "khmuhtadin@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use this tool to CREATE new calendar events. REQUIRED parameters: event_title, start_date, end_date (both in ISO format YYYY-MM-DDTHH:mm:ss.sssZ). OPTIONAL: event_description, location. Example: event_title='Team Meeting', start_date='2025-07-08T14:00:00.000Z', end_date='2025-07-08T15:00:00.000Z', event_description='Weekly team sync', location='Conference Room A'",
        "calendar": {
          "__rl": true,
          "value": "contactmuhtadin@gmail.com",
          "mode": "list",
          "cachedResultName": "contactmuhtadin@gmail.com"
        },
        "start": "={{ $fromAI('start_date') }}",
        "end": "={{ $fromAI('end_date') }}",
        "useDefaultReminders": false,
        "additionalFields": {
          "attendees": [],
          "description": "={{ $fromAI('event_description') || '' }}",
          "location": "={{ $fromAI('location') || '' }}",
          "summary": "={{ $fromAI('event_title') }}"
        }
      },
      "id": "8530e92e-1c5e-46b3-bc42-eff1c9415aa2",
      "name": "Create Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        2360,
        1260
      ],
      "typeVersion": 1.2,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "lU6A6eEP54fhSOnK",
          "name": "khmuhtadin@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use this tool to UPDATE/MODIFY existing calendar events. REQUIRED: event_id (get this from 'Get events' tool first). OPTIONAL parameters to update: event_title, start_date, end_date (in ISO format), event_description, location. Only provide parameters you want to change. Example: event_id='abc123def', event_title='Updated Meeting', start_date='2025-07-08T15:00:00.000Z', end_date='2025-07-08T16:00:00.000Z'",
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "contactmuhtadin@gmail.com",
          "mode": "list",
          "cachedResultName": "contactmuhtadin@gmail.com"
        },
        "eventId": "={{ $fromAI('event_id') }}",
        "useDefaultReminders": false,
        "updateFields": {
          "description": "={{ $fromAI('event_description') || '' }}",
          "end": "={{ $fromAI('end_date') || '' }}",
          "location": "={{ $fromAI('location') || '' }}",
          "start": "={{ $fromAI('start_date') || '' }}",
          "summary": "={{ $fromAI('event_title') || '' }}"
        }
      },
      "id": "776ba60a-b80a-476a-adce-96120c2ce2eb",
      "name": "Update Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        2480,
        1260
      ],
      "typeVersion": 1.2,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "lU6A6eEP54fhSOnK",
          "name": "khmuhtadin@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "ID"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1400,
        1140
      ],
      "id": "18eb6e28-1b39-41b5-b7db-0bea6d7b1f06",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "IWdqsaVAq1AL1S28",
          "name": "n8n - Money manager Khairul"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1120,
        1140
      ],
      "id": "597784d1-a40e-48e5-bdaa-b5db3561bd9c",
      "name": "📥 Download Voice",
      "webhookId": "7d9d13d4-ec19-40d7-a905-0b44b58867d9",
      "credentials": {
        "telegramApi": {
          "id": "h0kKP9CbkgczV76h",
          "name": "Khaisa Assistant"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "telegram-trigger",
      "name": "Start",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        680,
        1040
      ],
      "typeVersion": 1.2,
      "webhookId": "a57703c3-a03a-406d-b980-f94a0d9a4e3f",
      "credentials": {
        "telegramApi": {
          "id": "h0kKP9CbkgczV76h",
          "name": "Khaisa Assistant"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1760,
        1040
      ],
      "id": "4a6a7c60-1ed6-448a-9dab-046f895e3025",
      "name": "Merge",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "77925101-ceaa-42eb-bb55-fedf830f2cc6"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d2e3b9a3-74a7-4f09-98df-16d49a898821",
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        900,
        1040
      ],
      "id": "4313547f-b896-46a8-896c-ee268f137344",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $('Start').item.json.message.chat.id }}"
      },
      "id": "34ffeb49-a92d-408a-b5be-4c9e46215274",
      "name": "Typing 2",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1940,
        1040
      ],
      "typeVersion": 1.2,
      "webhookId": "fb7d9e87-d2a3-41af-a767-391533f26587",
      "credentials": {
        "telegramApi": {
          "id": "h0kKP9CbkgczV76h",
          "name": "Khaisa Assistant"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4cdcaff2-6399-4d0c-8043-b9b4133af6ba",
              "name": "message",
              "value": "={{ $('Start').item.json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1400,
        940
      ],
      "id": "25e2f802-702f-49c5-b4ec-b7859b358ff1",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "content": "## AI Processor",
        "height": 220,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1680,
        760
      ],
      "id": "827ba6e7-f308-4cba-beee-31e1c6055b5b",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Calendar Agent",
        "height": 580,
        "width": 2500,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        620,
        860
      ],
      "id": "317717f6-7223-4bd6-8cc5-4147e6836097",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Reminder Agent",
        "height": 440,
        "width": 1200,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        620,
        380
      ],
      "id": "6a85f881-9c27-488b-a21c-cd2efd6d0b51",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## How to Use the Bot\n\n### ✨ Main Features\n- **📝 Create Events**: \"Schedule meeting tomorrow at 2 PM\"\n- **📋 View Schedule**: \"Show today's agenda\"\n- **✏️ Update Events**: \"Change meeting to 3 PM\"\n- **🗑️ Delete Events**: \"Cancel team meeting\"\n- **🎤 Voice Messages**: Send voice messages in Indonesian\n\n",
        "height": 440,
        "width": 440
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1840,
        380
      ],
      "id": "856ed3d2-58f3-47c2-a63b-f876a1fff14a",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## 🔧 Bot Setup Requirements\n1. **Telegram Bot**: Create bot via [@BotFather](https://t.me/botfather)\n2. **Google Calendar**: Setup OAuth2 credentials\n3. **OpenAI API**: For voice message transcription\n4. **Google Gemini**: For AI language model\n\n### 📚 Useful Resources\n- [n8n Documentation](https://docs.n8n.io)\n- [Telegram Bot API](https://core.telegram.org/bots/api)\n- [Google Calendar API](https://developers.google.com/calendar)\n- [OpenAI API Docs](https://platform.openai.com/docs)\n\n### ⚡ Auto Reminder Feature\nBot automatically sends reminders 45-60 minutes before events start!",
        "height": 440,
        "width": 340
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2300,
        380
      ],
      "id": "00f1e9f5-435d-4d99-84f9-29fd27740cc8",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "### 🤖 Example Commands\n\n**Creating Events:**\n```\nSchedule team meeting tomorrow at 2:00 PM\nCreate doctor appointment Friday at 10 AM\nAdd lunch with Sarah at Mario's Restaurant\n```\n\n**Viewing Schedule:**\n```\nWhat's my schedule today?\nShow next week's agenda\nList upcoming events\n```\n\n**Updating Events:**\n```\nMove meeting to 3:00 PM\nChange meeting location to Conference Room A\nUpdate event description\n```\n\n**Deleting Events:**\n```\nDelete doctor appointment\nCancel tomorrow's meeting\nRemove lunch event\n```",
        "height": 440,
        "width": 460
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2660,
        380
      ],
      "id": "90ffa13b-633c-46e6-92aa-3da633472c1d",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## This Workflow is free\n\n#### kind to share to make the buzz keep goes. a coffee will be really appreciated\n\n## 👉 [Give Coffee](coff.ee/khmuhtadin)",
        "height": 220,
        "width": 300,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2760,
        1180
      ],
      "id": "de736a76-75d7-47c6-b901-936839161818",
      "name": "Sticky Note6"
    }
  ],
  "pinData": {},
  "connections": {
    "Send Typing Indicator": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Model": {
      "ai_languageModel": [
        [
          {
            "node": "Reminder Message Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Calendar Manage!",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Reminder Schedule": {
      "main": [
        [
          {
            "node": "Get Upcoming Events",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Upcoming Events": {
      "main": [
        [
          {
            "node": "Filter Duplicate Reminders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Duplicate Reminders": {
      "main": [
        [
          {
            "node": "Reminder Message Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reminder Message Agent": {
      "main": [
        [
          {
            "node": "Send Reminder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Manage!": {
      "main": [
        [
          {
            "node": "Send AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Manage!",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Calendar Manage!",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get events": {
      "ai_tool": [
        [
          {
            "node": "Calendar Manage!",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Manage!",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Manage!",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "📥 Download Voice": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Typing 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Send Typing Indicator",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "📥 Download Voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Typing 2": {
      "main": [
        [
          {
            "node": "Calendar Manage!",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "saveExecutionProgress": true
  },
  "versionId": "697b5396-ecea-4c76-9023-6cbe016f4855",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c2650793f644091dc80fb900fe63448ad1f4b774008de9608064d67294f8307c"
  },
  "id": "u9Zcx3D4glCt7lQP",
  "tags": []
}